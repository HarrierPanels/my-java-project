pipeline {
    agent {
        label 'aws2023'
    }

    parameters {
        choice(
            name: 'VERSION',
            choices: '', // Empty initial choices
            description: 'Select a version to deploy'
        )
    }

    stages {
        stage('Fetch Docker Hub Tags') {
            steps {
                script {
                    // Fetch available versions from Docker Hub
                    def response = httpRequest(
                        url: 'https://hub.docker.com/v2/repositories/harrierpanels/myapp/tags/',
                        httpMode: 'GET'
                    )

                    // Check if the request was successful
                    if (response.status == 200) {
                        def tags = evaluateJson(response.content)
                        def availableVersions = tags.results.collect { it.name }

                        // Use 'input' to prompt for version selection
                        def updatedChoices = availableVersions.join('\n')
                        updatedChoices = updatedChoices.replaceAll("\n", " ") // Replace newlines with spaces
                        input(
                            id: 'userInput',
                            message: 'Select a version to deploy',
                            parameters: [choice(name: 'VERSION', choices: updatedChoices, description: 'Select a version to deploy')]
                        )
                    } else {
                        error("Failed to fetch Docker Hub tags: ${response.status} - ${response.content}")
                    }
                }
            }
        }

        stage('Build and Deploy') {
            steps {
                echo "This is where you would add your build and deployment steps."
                echo "Selected version: ${params.VERSION}"
            }
        }
    }
}

def evaluateJson(json) {
    def jsonSlurper = new groovy.json.JsonSlurper()
    return jsonSlurper.parseText(json)
}
